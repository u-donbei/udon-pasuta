/*
 * Copyright (c) 2024 u-donbei
 *
 * Released under the EPL license.
 *
 * see https://www.eclipse.org/legal/epl-2.0/
 */

plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'checkstyle'
    id 'com.github.spotbugs' version '6.0.22'
    id 'jacoco'
}


group 'jp.u_donbei'
version '0.1.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
    moduleName = 'jp.udonbei.udonpasuta'
    junitModuleName = 'org.junit.jupiter.api'
}

sourceCompatibility = '21'
targetCompatibility = '21'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'jp.udonbei.udonpasuta'
    mainClass = 'jp.udonbei.udonpasuta.Main'
}

javafx {
    version = '22'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.media']
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    runtimeOnly "org.openjfx:javafx-base:$javafx.version:win"
    //runtimeOnly "org.openjfx:javafx-base:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-controls:$javafx.version:win"
    //runtimeOnly "org.openjfx:javafx-controls:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-fxml:$javafx.version:win"
    //runtimeOnly "org.openjfx:javafx-fxml:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:win"
    //runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:linux"

    implementation 'ch.qos.logback:logback-classic:1.5.6'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.0'

    testImplementation 'org.testfx:testfx-junit5:4.0.18'
    testImplementation 'org.hamcrest:hamcrest:2.1'
}

test {
    useJUnitPlatform()

    doFirst {
        jvmArgs = [
                '--add-reads', 'jp.udonbei.udonpasuta=org.testfx.junit5,org.testfx',
                '--add-exports', 'javafx.graphics/com.sun.javafx.application=org.testfx',
                '--add-opens', 'javafx.graphics/com.sun.javafx.application=org.testfx'
        ]
    }
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug',
               '--compress', '2',
               '--no-header-files',
               '--no-man-pages',
               '--add-modules', 'jdk.management.agent']

    launcher {
        it.name = 'うどんべいのパスタ退治'
    }

    jpackage {
        mainClass = 'jp.udonbei.udonpasuta.Main'
        appVersion = '0.1.1'
        jvmArgs.add('-Dcom.sun.management.jmxremote');
        installerName = 'うどんべいのパスタ退治'
        installerType = 'msi'
        imageOptions = [
                '--input', 'input',
        ]
        installerOptions = [
                '--install-dir', '\\udon-pasuta',
                '--about-url', 'https://github.com/u-donbei/udon-pasuta',
                '--copyright', 'CopyRight (c) 2024 u-donbei.',
                '--description', 'うどんべいのパスタ退治のゲーム',
                '--vendor', 'u-donbei',
                '--license-file', 'LICENSE',
                '--win-dir-chooser',
                '--win-menu',
                '--win-per-user-install',
                '--win-shortcut',
                '--win-shortcut-prompt',
                '--win-update-url', 'https://github.com/u-donbei/udon-pasuta/releases',
                '--win-upgrade-uuid', 'f6f4a8e1-ccd6-4fb6-9029-deac82e257fb',
                '--win-help-url', 'https://github.com/u-donbei/udon-pasuta/issues'
        ]
    }
}

jlinkZip {
    group = 'distribution'
}

checkstyle {
    configFile = file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml");
    toolVersion = '10.18.0'
    sourceSets = [project.sourceSets.main]
}

spotbugs {
    excludeFilter = rootProject.file('config/spotbugs/exclude.xml')
}

compileTestJava {
    doFirst {
        options.compilerArgs.addAll(Arrays.asList(
                '--add-modules', 'org.testfx.junit5',
                '--add-reads', 'jp.udonbei.udonpasuta=org.testfx.junit5, org.testfx'))
    }
}

tasks.spotbugsMain {
    reports.create("html") {
        required = true
        outputLocation = rootProject.file("build/reports/spotbugs/main.html")
    }
}

tasks.register('buildCount') {
    File count = file('tmp/buildCount')
    int c
    try (Reader reader = new FileReader(count)) {
        String str = ""
        for (int i = reader.read();
             i != -1;
             i = reader.read()) {
            str += (char) i
        }
        c = Integer.parseInt(str)
    }
    try (Writer w = new FileWriter(count)) {
        w.write(Integer.toString(++c))
    }
}

jpackage.dependsOn buildCount